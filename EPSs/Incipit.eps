%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 21.12.0 (http://poppler.freedesktop.org)
%%Creator: TeX
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 286 39
%%HiResBoundingBox: 0 0 286 39
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font BZZZZZ+EBGaramond-Regular
/BZZZZZ+EBGaramond-Regular_sfnts [
<00010000000b0080000300306376742000000000000000bc000000006670676d
00000000000000bc00000000676c7966ce91797b000000bc00000c5068656164
1aef02a400000d0c00000036686865610c94054d00000d4400000024686d7478
2183023a00000d68000000586c6f63610000944800000dc00000005c6d617870
003c048a00000e1c000000207072657068068c8500000e3c0000000776686561
000203e900000e4400000024766d747803e8000000000e680000002e00>
<00020032000001c201d90003000700007311211125211121320190fea2012cfe
d401d9fe2732017500>
<00010000fff402a6028d00480000452227262627032626272626353436333216
1633323636333216151406070606151416171316163713362627262635343633
32321633323633321615140607060607030e02070606013e0803040c05b70a22
1a1011100d10272c171427210a0d1010111c25090290020603891423200f1210
0d0d2023131d42130d10101125320bbc020b0c0601060c070b250d01eb1c2607
050a070605020101010506070b02031311111907fe840402070168353104020b
0706050103050607090408341bfe38051f240c030400000000>
<00010025fffb021b028d00730000572226353437363635113426272626353436
3332161633323633363633321617161615140623222627262627262623232206
1515141633333236373633321615140606151416161514062322272626232322
0615151416333332363736363736361716161514060607060623222e02232206
06420d102126241d261110100d2635332321491f222f04050c01050a09050504
02050a070e221383081c0b07631d1607060c04090102010103060f080614145d
111120224a202b1010191003080505060a0f0603050630524a47261620220505
060c0607202401c2241e07030a070605020101010104051c371409060505111f
07100b120ed4090d151c160808041c1e080a211e04070a2017160911c0261d07
0a0b241e060801010706092d300e070a020202030300000000>
<00010018fffd01f901ae005c0000572226353436373636353534262726263534
3736363736363332161514061514161736363332161515141617161615140623
2226262322060623222635343637363635353426272206070606151514161716
15140623222626232206062c090b0c0b0f1c0b1a040609232c15030503020305
0101234f2f31401c0f080f0e061416141211161714050f0f080f1c3129243615
04041c0f170a0a14171412111517030506080503040e14d71b26070205060b01
091a1002030403072b0e0407012122503bd5140d050307080603030202030306
080703050d14d22c31011711040d06f1140e04060a0605030202030000>
<ffff0018fffd00e20269062600120000000600131800000000>
<0001002efff1028f02970037000045222e0235343e0233321616171616171616
1716062627262627262623220e0215141e023332363736321514060607060607
060601974682663b3e6c8b4d273633220f0d01020601010f11030a1a1a194729
3a6347282749653e485e21071b080d0607091025670f30597d4c497c5c33060b
0904100e1735270709040b26371211112f5166373d765f39423b0d100823270f
0e08050f0e00000000>
<0001001dfffd014901ae00430000572226353436373636353534262726263534
3736363736363332151406060714333e02333216151406062322262726262322
0615151416171616151423222623220606310a0a0c0b131310190406091a3910
060702050101010210272913151b0b120a060e08081008182d1c190b0c141e1f
1a11151703050608050305130ed71b28050108040a02081f0a04030703182010
02141e12120e0a1812050403062232ca0d11080306070b050203000000>
<0002001efff1016d019e00230033000057222626353436363332161615142323
22061514161633323637363633321514070e0203333236373636353426232206
061514d537522e355834283e231ed30e0b2a462a1e311304040308120f2a3277
5b18221005033323172e1e0f3663413a5f3a2039251f0f16304f2f171605030a
1317131c0f012f0203010b0a1d291b28140a000000>
<0001001d00aa00f500ff00100000772235343637363637321615140607060623
0609073060300305090c2d5daa06112401070d050303132102070d0000>
<ffff0025fff2018e02890626001400000007001500f7000000>
<00010023fff2013201db003600005722263535342623232226353436373e0237
3636333216070706163333321615140623232206151514163332363736333216
15140606bd31370c14060507060114211b0905070505090105010c0d72040606
0463190f22201d200d0202040321350e3c3be808070d070208010e1c1b0b0507
04072d0b080d0909110814c5282e0909020905051e1a000000>
<00020023fff201cc019e0010002400005722262635343e023332161615140606
2732363736363534262623220607060615141616ea385a35213c502e3a5d3733
643622360f0c08233f2b1b2b12140c243e0e345b3a2a504227385b363a68411e
1a1d17421d305939111719482431593800>
<00010028fff001a6029800420000572226272626272626273436333216171616
3332363635342626272e02353436363332161716161716161514232226272626
2322060615141616171e0215140606cc2a471c0407020503020c08050a01144f
2b23361f1b3224274c322e5d46243510080b02060e0f09110215382b1e342127
402523432b3662101917040a06144015070705064d421e372529332616193343
303352310f07030e081536180b0806353816322a1e312c17153245323b59300000>
<00020013fee301e401aa0048005f000053222635343637363635113426262726
263534363736363732343332161514061514173e023332161615140e02232226
262722060615151416161716161514062322262322060613323e0235342e0223
22060615140e02151416162805100f080f1c0914110404040326361801010204
05010a35441f344927223e522f0e27250a010201151b0a080f10061d271a1115
16d60f2b2b1d1e2c2e101833230101012537fee30306080703050d1401fb0820
1e0301080405060109150a01060309270c08010a1f1937572f2d554429090e09
171903bb0d0f07030307080603050203012e122844323a46240c141907162d2a
210928442900000000>
<ffff0018fffd00f902890626001200000007001500aa000000>
<0001001dffed0205019f005c0000452235343635343435060623222626353534
2627262635343637363637363233320706061515141616333236373636353534
2626232226353436333e023736363332151406070e0215151416333236333216
151406070606070606016e0705274f2f20341e14170508090622251c0303020b
0103031827151a27130b2219200a090c0d081f2921120206020d01010103030b
07081f07050a0806273816030c13080a270d02030126211b3527cb161a090206
08090601020707010e171f17c318291a060e08241fb7151508070a0906010307
0501010b010503031c1e08e71b17030409080501051409010500000000>
<0001001dfff20123019e00350000572226272626273433321617161633323635
3426272e02353436363332161716161514232226272626232206151416171616
151406901f36130505010d0407010d391d1d29242d222a131e3c2d1e280a080b
0a060b020d271d19271d283a39520e13110b3411090304312a271d1b271c1526
281920341f0c070b2f1507050421231e1d17241721392f364400000000>
<00010014ff6d00b60075001900005722353436373e0235342627262635343633
321615140e0226120707162c1e161116192116242f1e2e31930b04070105182d
230c1f01021810141a372a263d2c180000>
<00010018fffd00e201b2002d0000572226353436373636353534262726263534
373636373633321514060615151416171616151423222626232206062c090b0f
081516131a05050928340d09050605041714080f141317151211161603050608
0602050f12d91b2a040106060b01091f0a0705082f3917e81110050206080b03
0202030000>
<00010032020400970269000b000053222635343633321615140664151d1d1516
1d1d02041d15161d1d16151d00>
<00020025fff2018e019e003e0051000057222626353436373736363737362623
220607060615141615140606232226353436373e023332160707061633323736
3332161514070606232227230606373236373636373736262322060706061514
167512251922256614070102011f1d0f1e0a060401191f0a0506151317363414
242f0105011510190c050305060b1025102e1b03213c0f141c0b050701020104
06020a0835291f0e1c281220240f2a080c14401a260a08041009040a0405110d
05041025101520123326f0151a0b0506050b0b1013341b19300d0b051113310b
0a02031329111a1b00>
<0001ffb201c9004f0289001700004322353436373e0237363633321615140607
0e02070646080202071f1f08050f07131e05050c292a0d1501c909030906133b
380d080a0a0b0608071133300d15000000>
<000100000001004208702b6d5f0f3cf5000303e800000000d61672bb00000000
dd1f4c2efedefebc09c403d900000006000200010000000000>
<0001000003effed6000009f6fedefc6a09c40001000000000000000000000000
0000001600>
<01f4003202a00000023400250210001800f5001802c6002e014e001d0186001e
0112001d018f0025013a002301ef002301d100280207001300f50018020f001d
0143001d00e6001400f5001800c80032018f00250000ffb200>
<00000000000000280000010000000238000003340000034c000003f4000004b0
00000544000005800000059800000630000006a0000007600000086800000880
0000097c00000a1800000a6800000aec00000b1800000c0000000c5000>
<000100000016024400170244000700010000000000000000000000000007000100>
<b801ff85b0048d0000>
<0001000000000000000003e80000000000000000000100000000000000000000
0000000100>
<03e8000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000>
] def
10 dict begin
/FontName /BZZZZZ+EBGaramond-Regular_00 def
/FontType 42 def
/FontMatrix [1 0 0 1 0 0] def
/FontBBox [-290 -324 2500 985] def
/PaintType 0 def
/sfnts BZZZZZ+EBGaramond-Regular_sfnts def
/Encoding 256 array
dup 0 /c00 put
dup 1 /c01 put
dup 2 /c02 put
dup 3 /c03 put
dup 4 /c04 put
dup 5 /c05 put
dup 6 /c06 put
dup 7 /c07 put
dup 8 /c08 put
dup 9 /c09 put
dup 10 /c0a put
dup 11 /c0b put
dup 12 /c0c put
dup 13 /c0d put
dup 14 /c0e put
dup 15 /c0f put
dup 16 /c10 put
dup 17 /c11 put
dup 18 /c12 put
dup 19 /c13 put
dup 20 /c14 put
dup 21 /c15 put
readonly def
/CharStrings 257 dict dup begin
/.notdef 0 def
/c00 0 def
/c01 1 def
/c02 2 def
/c03 3 def
/c04 4 def
/c05 5 def
/c06 6 def
/c07 7 def
/c08 8 def
/c09 9 def
/c0a 10 def
/c0b 11 def
/c0c 12 def
/c0d 13 def
/c0e 14 def
/c0f 15 def
/c10 16 def
/c11 17 def
/c12 18 def
/c13 19 def
/c14 20 def
/c15 21 def
end readonly def
FontName currentdict end definefont pop
16 dict begin
/FontName /BZZZZZ+EBGaramond-Regular def
/FontType 0 def
/FontMatrix [1 0 0 1 0 0] def
/FMapType 2 def
/Encoding [
0
] def
/FDepVector [
/BZZZZZ+EBGaramond-Regular_00 findfont
] def
FontName currentdict end definefont pop
%%EndResource
/F9_0 /BZZZZZ+EBGaramond-Regular 0 pdfMakeFont16
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 286 39 re
W
q
q
[1 0 0 1 -3 -608] cm
q
[1 0 0 1 0 0] cm
0 0 288 648 re
W
[1 0 0 -1 0 648] cm
q
[1 0 0 1 0 0] cm
[0.75 0 0 0.75 0 0] cm
q
0 0 384 53.476601 re
W
[1 0 0 1 0 0] cm
q
[1 0 0 1 0 0] cm
q
[1 0 0 1 0 0] cm
Q
q
[1 0 0 1 0 17] cm
q
[1 0 0 1 0 0] cm
q
[1 0 0 1 0 0] cm
Q
q
[1 0 0 1 0 0] cm
/DeviceRGB {} cs
[0 0 0] sc
[0 0 0] sc
/DeviceRGB {} CS
[0 0 0] SC
[0 0 0] SC
0.8 w
4 M
0 j
0 J
[] 0 d
50.333332 -15 m
384 -15 l
f
50.333332 -15 m
384 -15 l
S
Q
q
[1 0 0 1 0 0] cm
/DeviceRGB {} cs
[0 0 0] sc
[0 0 0] sc
/DeviceRGB {} CS
[0 0 0] SC
[0 0 0] SC
0.8 w
4 M
0 j
0 J
[] 0 d
50.333332 -5 m
384 -5 l
f
50.333332 -5 m
384 -5 l
S
Q
q
[1 0 0 1 0 0] cm
/DeviceRGB {} cs
[0 0 0] sc
[0 0 0] sc
/DeviceRGB {} CS
[0 0 0] SC
[0 0 0] SC
0.8 w
4 M
0 j
0 J
[] 0 d
50.333332 5 m
384 5 l
f
50.333332 5 m
384 5 l
S
Q
q
[1 0 0 1 0 0] cm
/DeviceRGB {} cs
[0 0 0] sc
[0 0 0] sc
/DeviceRGB {} CS
[0 0 0] SC
[0 0 0] SC
0.8 w
4 M
0 j
0 J
[] 0 d
50.333332 15 m
384 15 l
f
50.333332 15 m
384 15 l
S
Q
Q
q
[1 0 0 1 0 0] cm
/DeviceRGB {} cs
[0 0 0] sc
[0 0 0] sc
[1 0 0 1 0 0] Tm
0 0 Td
0 Tr
[1 0 0 -1 5.006666 31.6266] Tm
0 0 Td
/F9_0 60 Tf
(\000\001)
[40.32
0] Tj
Q
q
[1 0 0 1 50.333332 0] cm
q
[1 0 0 1 0 0] cm
q
[1 0 0 1 0 -5] cm
q
[0.05 0 0 0.05 0 0] cm
q
[1 0 0 1 0 0] cm
/DeviceRGB {} cs
[0 0 0] sc
[0 0 0] sc
0 98.406 m
0 -97.688 l
0 -118 5.99 -134.275 17.97 -146.516 c
29.948 -158.756 45.573 -164.876 64.844 -164.876 c
75.781 -164.876 84.374 -161.75 90.624 -155.5 c
96.874 -149.25 100 -140.917 100 -130.5 c
100 -22.687 l
93.75 -28.157 l
89.583 -31.802 83.463 -35.577 75.39 -39.484 c
67.318 -43.391 58.594 -45.344 49.22 -45.344 c
37.76 -45.344 27.734 -40.917 19.14 -32.062 c
10.547 -23.208 6.25 -12.532 6.25 -0.032 c
6.25 12.468 10.547 23.276 19.14 32.391 c
27.734 41.506 37.76 46.063 49.22 46.063 c
58.594 46.063 67.318 44.241 75.39 40.595 c
83.463 36.949 89.583 33.303 93.75 29.657 c
100 23.407 l
100 132 l
100 141.896 96.875 150.1 90.625 156.61 c
84.375 163.12 75.781 166.375 64.845 166.375 c
45.573 166.375 29.948 160.125 17.969 147.625 c
5.99 135.125 0 118.72 0 98.405 c
0 98.406 l
h
f
Q
Q
Q
Q
Q
q
[1 0 0 1 65.333332 0] cm
q
[1 0 0 1 0 0] cm
/DeviceRGB {} cs
[0 0 0] sc
[0 0 0] sc
[1 0 0 1 0 0] Tm
0 0 Td
0 Tr
[1 0 0 -1 -1.3 31.6266] Tm
0 0 Td
/F9_0 13.5 Tf
(\000\002)
[7.614
0] Tj
Q
q
[1 0 0 1 0 0] cm
q
[1 0 0 1 2.5 10] cm
q
[0.05 0 0 0.05 0 0] cm
q
[1 0 0 1 0 0] cm
/DeviceRGB {} cs
[0 0 0] sc
[0 0 0] sc
0 -60.906 m
33.333 -60.906 50 -51.271 50 -32 c
50 62.53 l
39.062 51.595 22.396 46.126 0 46.126 c
-22.396 46.126 -39.063 51.596 -50 62.532 c
-50 -32 l
-50 -51.27 -33.333 -60.906 0 -60.906 c
h
f
Q
Q
Q
Q
Q
q
[1 0 0 1 77.916665 0] cm
q
[1 0 0 1 0 0] cm
/DeviceRGB {} cs
[0 0 0] sc
[0 0 0] sc
[1 0 0 1 0 0] Tm
0 0 Td
0 Tr
[1 0 0 -1 -6.283333 31.6266] Tm
0 0 Td
/F9_0 13.5 Tf
(\000\003)
[7.128
0] Tj
[1 0 0 -1 0.844667 31.6266] Tm
0 0 Td
/F9_0 13.5 Tf
(\000\004)
[3.3075
0] Tj
Q
q
[1 0 0 1 0 0] cm
q
[1 0 0 1 2.5 5] cm
q
[0.05 0 0 0.05 0 0] cm
q
[1 0 0 1 0 0] cm
/DeviceRGB {} cs
[0 0 0] sc
[0 0 0] sc
0 -60.906 m
33.333 -60.906 50 -51.271 50 -32 c
50 62.53 l
39.062 51.595 22.396 46.126 0 46.126 c
-22.396 46.126 -39.063 51.596 -50 62.532 c
-50 -32 l
-50 -51.27 -33.333 -60.906 0 -60.906 c
h
f
Q
Q
Q
Q
Q
q
[1 0 0 1 99.999999 0] cm
q
[1 0 0 1 0 0] cm
/DeviceRGB {} cs
[0 0 0] sc
[0 0 0] sc
[1 0 0 1 0 0] Tm
0 0 Td
0 Tr
[1 0 0 -1 -14.233334 31.6266] Tm
0 0 Td
/F9_0 13.5 Tf
(\000\005)
[9.585
0] Tj
[1 0 0 -1 -4.648334 31.6266] Tm
0 0 Td
/F9_0 13.5 Tf
(\000\006)
[4.509
0] Tj
[1 0 0 -1 -0.139334 31.6266] Tm
0 0 Td
/F9_0 13.5 Tf
(\000\007)
[5.265
0] Tj
/DeviceRGB {} cs
[0 0 0] sc
[0 0 0] sc
[1 0 0 1 0 0] Tm
0 0 Td
0 Tr
[1 0 0 -1 5.125666 31.6266] Tm
0 0 Td
/F9_0 13.5 Tf
(\000\010)
[3.699
0] Tj
Q
q
[1 0 0 1 0 0] cm
q
[1 0 0 1 0 0] cm
/DeviceRGB {} cs
[0 0 0] sc
[0 0 0] sc
0 10 0.8 7.805409 re
f
Q
q
[1 0 0 1 2.5 10] cm
q
[0.05 0 0 0.05 0 0] cm
q
[1 0 0 1 0 0] cm
/DeviceRGB {} cs
[0 0 0] sc
[0 0 0] sc
0 -60.906 m
33.333 -60.906 50 -51.271 50 -32 c
50 62.53 l
39.062 51.595 22.396 46.126 0 46.126 c
-22.396 46.126 -39.063 51.596 -50 62.532 c
-50 -32 l
-50 -51.27 -33.333 -60.906 0 -60.906 c
h
f
Q
Q
Q
q
[1 0 0 1 7.5 15] cm
q
[0.05 0 0 0.05 0 0] cm
q
[1 0 0 1 0 0] cm
/DeviceRGB {} cs
[0 0 0] sc
[0 0 0] sc
0 -60.906 m
33.333 -60.906 50 -51.271 50 -32 c
50 62.53 l
39.062 51.595 22.396 46.126 0 46.126 c
-22.396 46.126 -39.063 51.596 -50 62.532 c
-50 -32 l
-50 -51.27 -33.333 -60.906 0 -60.906 c
h
f
Q
Q
Q
Q
Q
q
[1 0 0 1 119.999999 0] cm
q
[1 0 0 1 0 0] cm
/DeviceRGB {} cs
[0 0 0] sc
[0 0 0] sc
[1 0 0 1 0 0] Tm
0 0 Td
0 Tr
[1 0 0 -1 -0.2 31.6266] Tm
0 0 Td
/F9_0 13.5 Tf
(\000\011)
[5.3865
0] Tj
/DeviceRGB {} cs
[0 0 0] sc
[0 0 0] sc
[1 0 0 1 0 0] Tm
0 0 Td
0 Tr
[1 0 0 -1 5.1865 31.6266] Tm
0 0 Td
/F9_0 13.5 Tf
(\000\010)
[3.699
0] Tj
Q
q
[1 0 0 1 0 0] cm
q
[1 0 0 1 2.5 10] cm
q
[0.05 0 0 0.05 0 0] cm
q
[1 0 0 1 0 0] cm
/DeviceRGB {} cs
[0 0 0] sc
[0 0 0] sc
0 -60.906 m
33.333 -60.906 50 -51.271 50 -32 c
50 62.53 l
39.062 51.595 22.396 46.126 0 46.126 c
-22.396 46.126 -39.063 51.596 -50 62.532 c
-50 -32 l
-50 -51.27 -33.333 -60.906 0 -60.906 c
h
f
Q
Q
Q
Q
Q
q
[1 0 0 1 134.999999 0] cm
q
[1 0 0 1 0 0] cm
/DeviceRGB {} cs
[0 0 0] sc
[0 0 0] sc
[1 0 0 1 0 0] Tm
0 0 Td
0 Tr
[1 0 0 -1 -5.066666 31.6266] Tm
0 0 Td
/F9_0 13.5 Tf
(\000\012)
[4.239
0] Tj
[1 0 0 -1 -0.827666 31.6266] Tm
0 0 Td
/F9_0 13.5 Tf
(\000\013)
[6.6825
0] Tj
[1 0 0 -1 5.854834 31.6266] Tm
0 0 Td
/F9_0 13.5 Tf
(\000\006)
[4.509
0] Tj
Q
q
[1 0 0 1 0 0] cm
q
[1 0 0 1 0 0] cm
/DeviceRGB {} cs
[0 0 0] sc
[0 0 0] sc
0 5 0.8 12.805409 re
f
Q
q
[1 0 0 1 2.5 5] cm
q
[0.05 0 0 0.05 0 0] cm
q
[1 0 0 1 0 0] cm
/DeviceRGB {} cs
[0 0 0] sc
[0 0 0] sc
0 -60.906 m
33.333 -60.906 50 -51.271 50 -32 c
50 62.53 l
39.062 51.595 22.396 46.126 0 46.126 c
-22.396 46.126 -39.063 51.596 -50 62.532 c
-50 -32 l
-50 -51.27 -33.333 -60.906 0 -60.906 c
h
f
Q
Q
Q
q
[1 0 0 1 7.5 10] cm
q
[0.05 0 0 0.05 0 0] cm
q
[1 0 0 1 0 0] cm
/DeviceRGB {} cs
[0 0 0] sc
[0 0 0] sc
0 -60.906 m
33.333 -60.906 50 -51.271 50 -32 c
50 62.53 l
39.062 51.595 22.396 46.126 0 46.126 c
-22.396 46.126 -39.063 51.596 -50 62.532 c
-50 -32 l
-50 -51.27 -33.333 -60.906 0 -60.906 c
h
f
Q
Q
Q
Q
Q
q
[1 0 0 1 161.449999 0] cm
q
[1 0 0 1 0 0] cm
/DeviceRGB {} cs
[0 0 0] sc
[0 0 0] sc
[1 0 0 1 0 0] Tm
0 0 Td
0 Tr
[1 0 0 -1 -12.416667 31.6266] Tm
0 0 Td
/F9_0 13.5 Tf
(\000\014)
[6.2775
0] Tj
[1 0 0 -1 -6.139167 31.6266] Tm
0 0 Td
/F9_0 13.5 Tf
(\000\015)
[7.0065
0] Tj
[1 0 0 -1 0.867333 31.6266] Tm
0 0 Td
/F9_0 13.5 Tf
(\000\016)
[3.3075
0] Tj
/DeviceRGB {} cs
[0 0 0] sc
[0 0 0] sc
[1 0 0 1 0 0] Tm
0 0 Td
0 Tr
[1 0 0 -1 4.174833 31.6266] Tm
0 0 Td
/F9_0 13.5 Tf
(\000\010)
[3.699
0] Tj
Q
q
[1 0 0 1 0 0] cm
q
[1 0 0 1 2.5 -5] cm
q
[0.05 0 0 0.05 0 0] cm
q
[1 0 0 1 0 0] cm
/DeviceRGB {} cs
[0 0 0] sc
[0 0 0] sc
0 -60.906 m
33.333 -60.906 50 -51.271 50 -32 c
50 62.53 l
39.062 51.595 22.396 46.126 0 46.126 c
-22.396 46.126 -39.063 51.596 -50 62.532 c
-50 -32 l
-50 -51.27 -33.333 -60.906 0 -60.906 c
h
f
Q
Q
Q
q
[1 0 0 1 2.5 -1] cm
q
[0.05 0 0 0.05 0 0] cm
q
[1 0 0 1 0 0] cm
/DeviceRGB {} cs
[0 0 0] sc
[0 0 0] sc
-8 56 m
-6 59 -2 60 0 60 c
2 60 6 59 8 56 c
8 4 l
6 1 2 0 0 0 c
-2 0 -6 1 -8 4 c
-8 56 l
h
f
Q
Q
Q
Q
Q
q
[1 0 0 1 176.449999 0] cm
q
[1 0 0 1 0 0] cm
/DeviceRGB {} cs
[0 0 0] sc
[0 0 0] sc
[1 0 0 1 0 0] Tm
0 0 Td
0 Tr
[1 0 0 -1 -3.65 31.6266] Tm
0 0 Td
/F9_0 13.5 Tf
(\000\006)
[4.509
0] Tj
[1 0 0 -1 0.859 31.6266] Tm
0 0 Td
/F9_0 13.5 Tf
(\000\004)
[3.3075
0] Tj
/DeviceRGB {} cs
[0 0 0] sc
[0 0 0] sc
[1 0 0 1 0 0] Tm
0 0 Td
0 Tr
[1 0 0 -1 4.1665 31.6266] Tm
0 0 Td
/F9_0 13.5 Tf
(\000\010)
[3.699
0] Tj
Q
q
[1 0 0 1 0 0] cm
q
[1 0 0 1 2.5 -10] cm
q
[0.05 0 0 0.05 0 0] cm
q
[1 0 0 1 0 0] cm
/DeviceRGB {} cs
[0 0 0] sc
[0 0 0] sc
0 -60.906 m
33.333 -60.906 50 -51.271 50 -32 c
50 62.53 l
39.062 51.595 22.396 46.126 0 46.126 c
-22.396 46.126 -39.063 51.596 -50 62.532 c
-50 -32 l
-50 -51.27 -33.333 -60.906 0 -60.906 c
h
f
Q
Q
Q
Q
Q
q
[1 0 0 1 191.449999 0] cm
q
[1 0 0 1 0 0] cm
/DeviceRGB {} cs
[0 0 0] sc
[0 0 0] sc
[1 0 0 1 0 0] Tm
0 0 Td
0 Tr
[1 0 0 -1 -5.283333 31.6266] Tm
0 0 Td
/F9_0 13.5 Tf
(\000\012)
[4.239
0] Tj
[1 0 0 -1 -1.044333 31.6266] Tm
0 0 Td
/F9_0 13.5 Tf
(\000\017)
[7.1145
0] Tj
[1 0 0 -1 6.070167 31.6266] Tm
0 0 Td
/F9_0 13.5 Tf
(\000\020)
[4.3605
0] Tj
[1 0 0 -1 10.430667 31.6266] Tm
0 0 Td
/F9_0 13.5 Tf
(\000\021)
[3.105
0] Tj
Q
q
[1 0 0 1 0 0] cm
q
[1 0 0 1 2.5 -5] cm
q
[0.05 0 0 0.05 0 0] cm
q
[1 0 0 1 0 0] cm
/DeviceRGB {} cs
[0 0 0] sc
[0 0 0] sc
0 -60.906 m
33.333 -60.906 50 -51.271 50 -32 c
50 62.53 l
39.062 51.595 22.396 46.126 0 46.126 c
-22.396 46.126 -39.063 51.596 -50 62.532 c
-50 -32 l
-50 -51.27 -33.333 -60.906 0 -60.906 c
h
f
Q
Q
Q
q
[1 0 0 1 5.1 -8.75] cm
q
[0.05 0 0 0.05 0 0] cm
q
[1 0 0 1 0 0] cm
/DeviceRGB {} cs
[0 0 0] sc
[0 0 0] sc
47.478 -24 m
54.435 -24 60.271 -21.712 64.968 -17.117 c
69.662 -12.52 72 -6.904 72 -0.267 c
72 6.373 69.663 12.085 64.967 16.851 c
60.27 21.618 54.435 24 47.477 24 c
41.217 24 35.729 21.617 31.033 16.85 c
26.337 12.086 24 6.374 24 -0.265 c
24 -6.903 26.337 -12.52 31.033 -17.115 c
35.73 -21.713 41.217 -24 47.478 -24 c
h
f
Q
Q
Q
Q
Q
q
[1 0 0 1 208.949999 0] cm
q
[1 0 0 1 0 0] cm
q
[1 0 0 1 0 0] cm
/DeviceRGB {} cs
[0 0 0] sc
[0 0 0] sc
0 -10 0.8 20 re
f
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font BZZZZZ+EBGaramond-Regular
%%EOF
